#!/usr/bin/env python3
import requests
import sys
from bs4 import BeautifulSoup
import subprocess
#import argparse
#SSUCCCCCCCCessssssssssss
#Take searchterm
searchterm = sys.argv[1]
if 'searchterm' in locals():
    print ("\n searching for :", searchterm, "\n")

#Download Webpage and Parse HTML
webpage = "https://thepiratebay.org"
page = requests.get(webpage + "/search/" + searchterm)
soup = BeautifulSoup(page.content, 'html.parser')

#Generate Dictionaries of titles, seeders, leachers, ratios, magnets, and details 
search_result = 0; titles = {}; seeders = {} ;leachers = {}; ratios = {}; magnets = {} ; details = {}
table = soup.find("table", id="searchResult")
for tr in table.find_all("tr"):
    for td in tr.find_all("td"):
        if td.find(class_="detName"):
            titles[search_result] = (td.find(class_="detName")).get_text()
            details[search_result] = (td.find(class_="detDesc")).get_text
            link_order = 1
            tag_order = 1
            for link in td.find_all("a"):
                if link_order == 2:
                    magnets[search_result] = link.get("href")
                    break
                link_order += 1
        if (td.get("align") == "right"):
            if tag_order == 1:
                seeders[search_result] = float(td.get_text())
            if tag_order == 2:
                leachers[search_result] = float(td.get_text())
            tag_order += 1
    search_result += 1
for result in range(1,search_result): 
    if seeders[result] == 0 or leachers[result] == 0:
        ratios[result] = 0
    else:
        ratios[result] = round((seeders[result])/(leachers[result]), 1)

#return results
def print_results(x,y):
    for i in range(x,y):
        print (i, titles[i], "Seeders:",  int(seeders[i]), "     Leachers:",  int(leachers[i]), "     Ratio:", ratios[i], "\n")
 
print_results(1,6)

_input = int(input('type (help) for options\ninput: '))
themagnet = magnets[_input]
#subprocess.call(['transmisson-cli', (themagnet)], shell=True)
subprocess.call(['transmission-cli', (magnets[_input])])
#output = "mmmmmm check please"
#subprocess.call(['echo', (output)])#elif input == ("help"):
#    print (" # range(x,y)      prints results in range (x,y)
             # all             prints results in range (1,31)
             # print x         prints the magnet link for search result x
             # transmission x  passes the magnet link to transmission-cli
#            ")
#elif input == ("more"):
#    print_results(1,31)
#elif input == ("range(x,y)"):
    
#    for i 
#print (magnets[_input])

#print ("sending magnet link to transmission")
#subprocess.call("transmission-cli" "(magnets[_input]")

####to do:
##test
##print function

############OLD CODE TO SAVE###########################3
#for Entry in soup.find_all(class_="detName"):
#    Entries[counter] = Entry
#    link = Entry.find("a")
#    linkaddresses[counter] = link.get("href")
#    counter += 1; 
#print (Entries)


      #  Ratios[i] = str(Ratios[i])[:5]
      #  Ratios[i] = round(Ratios[i], 1)

#    print (details[i].encode('Latin-1'))  ##############
